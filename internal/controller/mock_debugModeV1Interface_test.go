// Code generated by mockery v2.53.3. DO NOT EDIT.

package controller

import (
	v1 "github.com/cloudogu/k8s-debug-mode-cr-lib/pkg/client/v1"
	mock "github.com/stretchr/testify/mock"
)

// mockDebugModeV1Interface is an autogenerated mock type for the debugModeV1Interface type
type mockDebugModeV1Interface struct {
	mock.Mock
}

type mockDebugModeV1Interface_Expecter struct {
	mock *mock.Mock
}

func (_m *mockDebugModeV1Interface) EXPECT() *mockDebugModeV1Interface_Expecter {
	return &mockDebugModeV1Interface_Expecter{mock: &_m.Mock}
}

// DebugMode provides a mock function with given fields: namespace
func (_m *mockDebugModeV1Interface) DebugMode(namespace string) v1.DebugModeInterface {
	ret := _m.Called(namespace)

	if len(ret) == 0 {
		panic("no return value specified for DebugMode")
	}

	var r0 v1.DebugModeInterface
	if rf, ok := ret.Get(0).(func(string) v1.DebugModeInterface); ok {
		r0 = rf(namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1.DebugModeInterface)
		}
	}

	return r0
}

// mockDebugModeV1Interface_DebugMode_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DebugMode'
type mockDebugModeV1Interface_DebugMode_Call struct {
	*mock.Call
}

// DebugMode is a helper method to define mock.On call
//   - namespace string
func (_e *mockDebugModeV1Interface_Expecter) DebugMode(namespace interface{}) *mockDebugModeV1Interface_DebugMode_Call {
	return &mockDebugModeV1Interface_DebugMode_Call{Call: _e.mock.On("DebugMode", namespace)}
}

func (_c *mockDebugModeV1Interface_DebugMode_Call) Run(run func(namespace string)) *mockDebugModeV1Interface_DebugMode_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *mockDebugModeV1Interface_DebugMode_Call) Return(_a0 v1.DebugModeInterface) *mockDebugModeV1Interface_DebugMode_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockDebugModeV1Interface_DebugMode_Call) RunAndReturn(run func(string) v1.DebugModeInterface) *mockDebugModeV1Interface_DebugMode_Call {
	_c.Call.Return(run)
	return _c
}

// newMockDebugModeV1Interface creates a new instance of mockDebugModeV1Interface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockDebugModeV1Interface(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockDebugModeV1Interface {
	mock := &mockDebugModeV1Interface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
